--
-- EVENT TRIGGERS
--
create or replace function snitch()
 returns event_trigger
 language plpgsql
as $$
begin
  -- can't output tg_objectid here that would break pg_regress
  raise notice 'snitch: % % %.%', tg_when, tg_tag, tg_schemaname, tg_objectname;
end;
$$;
--
-- TODO: REASSIGN OWNED and DROP OWNED
--
create event trigger any_t on command_start
   execute procedure snitch();
create event trigger foo_t on command_start
                when tag in ('alter collation',
                             'alter conversion',
                             'alter domain',
                             'alter function',
                             'alter operator',
                             'alter schema',
                             'alter sequence',
                             'alter table',
                             'alter trigger',
                             'alter type',
                             'alter view',
                             'create aggregate',
                             'create cast',
                             'create collation',
                             'create domain',
                             'create function',
                             'create operator class',
                             'create operator',
                             'create schema',
                             'create sequence',
                             'create table as',
                             'create table',
                             'create text search configuration',
                             'create text search dictionary',
                             'create text search parser',
                             'create text search template',
                             'create trigger',
                             'create type',
                             'create view',
                             'drop aggregate',
                             'drop domain',
                             'drop schema',
                             'drop table',
                             'drop text search configuration',
                             'drop text search dictionary',
                             'drop text search parser',
                             'drop text search template',
                             'drop trigger',
                             'reindex',
                             'select into',
                             'vacuum')
   execute procedure snitch();
alter event trigger foo_t disable;
alter event trigger foo_t enable;
alter event trigger foo_t rename to snitch;
create schema cmd;
NOTICE:  snitch: command_start CREATE SCHEMA <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE SCHEMA <NULL>.<NULL>
create schema cmd2;
NOTICE:  snitch: command_start CREATE SCHEMA <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE SCHEMA <NULL>.<NULL>
create role regbob;
alter event trigger snitch owner to regbob;
create table cmd.foo(id bigserial primary key);
NOTICE:  snitch: command_start CREATE TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE SEQUENCE <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE SEQUENCE <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE INDEX <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
create view cmd.v as select * from cmd.foo;
NOTICE:  snitch: command_start CREATE VIEW <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE VIEW <NULL>.<NULL>
alter table cmd.foo add column t text;
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
create table cmd.bar as select 1;
NOTICE:  snitch: command_start CREATE TABLE AS <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE TABLE AS <NULL>.<NULL>
drop table cmd.bar;
NOTICE:  snitch: command_start DROP TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start DROP TABLE <NULL>.<NULL>
select 1 into cmd.bar;
NOTICE:  snitch: command_start SELECT INTO <NULL>.<NULL>
NOTICE:  snitch: command_start SELECT INTO <NULL>.<NULL>
drop table cmd.bar;
NOTICE:  snitch: command_start DROP TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start DROP TABLE <NULL>.<NULL>
create table test9 (id int, stuff text);
NOTICE:  snitch: command_start CREATE TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE TABLE <NULL>.<NULL>
alter table test9 rename to test;
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
alter table test set schema cmd;
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
alter table cmd.test rename column stuff to things;
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
alter table cmd.test add column alpha text;
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
alter table cmd.test alter column alpha set data type varchar(300);
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
alter table cmd.test alter column alpha set default 'test';
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
alter table cmd.test alter column alpha drop default;
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
alter table cmd.test alter column alpha set statistics 78;
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
alter table cmd.test alter column alpha set storage plain;
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
alter table cmd.test alter column alpha set not null;
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
alter table cmd.test alter column alpha drop not null;
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
alter table cmd.test alter column alpha set (n_distinct = -0.78);
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
alter table cmd.test alter column alpha reset (n_distinct);
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
alter table cmd.test drop column alpha;
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
alter table cmd.test add check (id > 2) not valid;
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
alter table cmd.test add check (id < 800000);
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
alter table cmd.test set without cluster;
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
alter table cmd.test set with oids;
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
alter table cmd.test set without oids;
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TABLE <NULL>.<NULL>
create sequence test_seq_;
NOTICE:  snitch: command_start CREATE SEQUENCE <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE SEQUENCE <NULL>.<NULL>
alter sequence test_seq_ owner to regbob;
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
alter sequence test_seq_ rename to test_seq;
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
alter sequence test_seq set schema cmd;
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
alter sequence cmd.test_seq start with 3;
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
alter sequence cmd.test_seq restart with 4;
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
alter sequence cmd.test_seq minvalue 3;
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
alter sequence cmd.test_seq no minvalue;
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
alter sequence cmd.test_seq maxvalue 900000;
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
alter sequence cmd.test_seq no maxvalue;
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
alter sequence cmd.test_seq cache 876;
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
alter sequence cmd.test_seq cycle;
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
alter sequence cmd.test_seq no cycle;
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER SEQUENCE <NULL>.<NULL>
create view view_test as select id, things from cmd.test;
NOTICE:  snitch: command_start CREATE VIEW <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE VIEW <NULL>.<NULL>
alter view view_test owner to regbob;
NOTICE:  snitch: command_start ALTER VIEW <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER VIEW <NULL>.<NULL>
alter view view_test rename to view_test2;
NOTICE:  snitch: command_start ALTER VIEW <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER VIEW <NULL>.<NULL>
alter view view_test2 set schema cmd;
NOTICE:  snitch: command_start ALTER VIEW <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER VIEW <NULL>.<NULL>
alter view cmd.view_test2 alter column id set default 9;
NOTICE:  snitch: command_start ALTER VIEW <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER VIEW <NULL>.<NULL>
alter view cmd.view_test2 alter column id drop default;
NOTICE:  snitch: command_start ALTER VIEW <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER VIEW <NULL>.<NULL>
cluster cmd.foo using foo_pkey;
NOTICE:  snitch: command_start CLUSTER <NULL>.<NULL>
vacuum cmd.foo;
NOTICE:  snitch: command_start VACUUM <NULL>.<NULL>
NOTICE:  snitch: command_start VACUUM <NULL>.<NULL>
vacuum;
NOTICE:  snitch: command_start VACUUM <NULL>.<NULL>
NOTICE:  snitch: command_start VACUUM <NULL>.<NULL>
reindex table cmd.foo;
NOTICE:  snitch: command_start REINDEX <NULL>.<NULL>
NOTICE:  snitch: command_start REINDEX <NULL>.<NULL>
set session_replication_role to replica;
create table cmd.bar();
NOTICE:  snitch: command_start CREATE TABLE <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE TABLE <NULL>.<NULL>
reset session_replication_role;
create index idx_foo on cmd.foo(t);
NOTICE:  snitch: command_start CREATE INDEX <NULL>.<NULL>
reindex index cmd.idx_foo;
NOTICE:  snitch: command_start REINDEX <NULL>.<NULL>
NOTICE:  snitch: command_start REINDEX <NULL>.<NULL>
drop index cmd.idx_foo;
NOTICE:  snitch: command_start DROP INDEX <NULL>.<NULL>
create function fun(int) returns text language sql
as $$ select t from cmd.foo where id = $1; $$;
NOTICE:  snitch: command_start CREATE FUNCTION <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE FUNCTION <NULL>.<NULL>
alter function fun(int) strict;
NOTICE:  snitch: command_start ALTER FUNCTION <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER FUNCTION <NULL>.<NULL>
alter function fun(int) rename to notfun;
NOTICE:  snitch: command_start ALTER FUNCTION <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER FUNCTION <NULL>.<NULL>
alter function notfun(int) set schema cmd;
NOTICE:  snitch: command_start ALTER FUNCTION <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER FUNCTION <NULL>.<NULL>
alter function cmd.notfun(int) owner to regbob;
NOTICE:  snitch: command_start ALTER FUNCTION <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER FUNCTION <NULL>.<NULL>
alter function cmd.notfun(int) cost 77;
NOTICE:  snitch: command_start ALTER FUNCTION <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER FUNCTION <NULL>.<NULL>
drop function cmd.notfun(int);
NOTICE:  snitch: command_start DROP FUNCTION <NULL>.<NULL>
create function cmd.plus1(int) returns bigint language sql
as $$ select $1::bigint + 1; $$;
NOTICE:  snitch: command_start CREATE FUNCTION <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE FUNCTION <NULL>.<NULL>
create operator cmd.+!(procedure = cmd.plus1, leftarg = int);
NOTICE:  snitch: command_start CREATE OPERATOR <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE OPERATOR <NULL>.<NULL>
alter operator cmd.+!(int, NONE) set schema public;
NOTICE:  snitch: command_start ALTER OPERATOR <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER OPERATOR <NULL>.<NULL>
drop operator public.+!(int, NONE);
NOTICE:  snitch: command_start DROP OPERATOR <NULL>.<NULL>
create aggregate cmd.avg (float8)
(
    sfunc = float8_accum,
    stype = float8[],
    finalfunc = float8_avg,
    initcond = '{0,0,0}'
);
NOTICE:  snitch: command_start CREATE AGGREGATE <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE AGGREGATE <NULL>.<NULL>
alter aggregate cmd.avg(float8) set schema public;
NOTICE:  snitch: command_start ALTER AGGREGATE <NULL>.<NULL>
drop aggregate public.avg(float8);
NOTICE:  snitch: command_start DROP AGGREGATE <NULL>.<NULL>
NOTICE:  snitch: command_start DROP AGGREGATE <NULL>.<NULL>
create collation cmd.french (LOCALE = 'fr_FR');
NOTICE:  snitch: command_start CREATE COLLATION <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE COLLATION <NULL>.<NULL>
alter collation cmd.french rename to francais;
NOTICE:  snitch: command_start ALTER COLLATION <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER COLLATION <NULL>.<NULL>
create type cmd.compfoo AS (f1 int, f2 text);
NOTICE:  snitch: command_start CREATE TYPE <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE TYPE <NULL>.<NULL>
alter type cmd.compfoo add attribute f3 text;
NOTICE:  snitch: command_start ALTER TYPE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TYPE <NULL>.<NULL>
create type cmd.type_test AS (a integer, b integer, c text);
NOTICE:  snitch: command_start CREATE TYPE <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE TYPE <NULL>.<NULL>
alter type cmd.type_test owner to regbob;
NOTICE:  snitch: command_start ALTER TYPE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TYPE <NULL>.<NULL>
alter type cmd.type_test rename to type_test2;
NOTICE:  snitch: command_start ALTER TYPE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TYPE <NULL>.<NULL>
alter type cmd.type_test2 set schema public;
NOTICE:  snitch: command_start ALTER TYPE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TYPE <NULL>.<NULL>
alter type public.type_test2 rename attribute a to z;
NOTICE:  snitch: command_start ALTER TYPE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TYPE <NULL>.<NULL>
alter type public.type_test2 add attribute alpha text;
NOTICE:  snitch: command_start ALTER TYPE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TYPE <NULL>.<NULL>
alter type public.type_test2 alter attribute alpha set data type char(90);
NOTICE:  snitch: command_start ALTER TYPE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TYPE <NULL>.<NULL>
alter type public.type_test2 drop attribute alpha;
NOTICE:  snitch: command_start ALTER TYPE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TYPE <NULL>.<NULL>
drop type cmd.compfoo;
NOTICE:  snitch: command_start DROP TYPE <NULL>.<NULL>
drop type public.type_test2;
NOTICE:  snitch: command_start DROP TYPE <NULL>.<NULL>
create type cmd.bug_status as enum ('new', 'open', 'closed');
NOTICE:  snitch: command_start CREATE TYPE <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE TYPE <NULL>.<NULL>
alter type cmd.bug_status add value 'wontfix';
NOTICE:  snitch: command_start ALTER TYPE <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TYPE <NULL>.<NULL>
create domain cmd.us_postal_code as text check(value ~ '^\d{5}$' or value ~ '^\d{5}-\d{4}$');
NOTICE:  snitch: command_start CREATE DOMAIN <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE DOMAIN <NULL>.<NULL>
alter domain cmd.us_postal_code set not null;
NOTICE:  snitch: command_start ALTER DOMAIN <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER DOMAIN <NULL>.<NULL>
alter domain cmd.us_postal_code set default 90210;
NOTICE:  snitch: command_start ALTER DOMAIN <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER DOMAIN <NULL>.<NULL>
alter domain cmd.us_postal_code drop default;
NOTICE:  snitch: command_start ALTER DOMAIN <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER DOMAIN <NULL>.<NULL>
alter domain cmd.us_postal_code drop not null;
NOTICE:  snitch: command_start ALTER DOMAIN <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER DOMAIN <NULL>.<NULL>
alter domain cmd.us_postal_code add constraint dummy_constraint check (value ~ '^\d{8}$');
NOTICE:  snitch: command_start ALTER DOMAIN <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER DOMAIN <NULL>.<NULL>
alter domain cmd.us_postal_code drop constraint dummy_constraint;
NOTICE:  snitch: command_start ALTER DOMAIN <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER DOMAIN <NULL>.<NULL>
alter domain cmd.us_postal_code owner to regbob;
NOTICE:  snitch: command_start ALTER DOMAIN <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER DOMAIN <NULL>.<NULL>
alter domain cmd.us_postal_code set schema cmd2;
NOTICE:  snitch: command_start ALTER DOMAIN <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER DOMAIN <NULL>.<NULL>
drop domain cmd2.us_postal_code;
NOTICE:  snitch: command_start DROP DOMAIN <NULL>.<NULL>
NOTICE:  snitch: command_start DROP DOMAIN <NULL>.<NULL>
create function cmd.trigfunc() returns trigger language plpgsql as
$$ begin raise notice 'trigfunc';  end;$$;
NOTICE:  snitch: command_start CREATE FUNCTION <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE FUNCTION <NULL>.<NULL>
create trigger footg before update on cmd.foo for each row execute procedure cmd.trigfunc();
NOTICE:  snitch: command_start CREATE TRIGGER <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE TRIGGER <NULL>.<NULL>
alter trigger footg on cmd.foo rename to foo_trigger;
NOTICE:  snitch: command_start ALTER TRIGGER <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER TRIGGER <NULL>.<NULL>
drop trigger foo_trigger on cmd.foo;
NOTICE:  snitch: command_start DROP TRIGGER <NULL>.<NULL>
NOTICE:  snitch: command_start DROP TRIGGER <NULL>.<NULL>
create conversion test for 'utf8' to 'sjis' from utf8_to_sjis;
NOTICE:  snitch: command_start CREATE CONVERSION <NULL>.<NULL>
create default conversion test2 for 'utf8' to 'sjis' from utf8_to_sjis;
NOTICE:  snitch: command_start CREATE CONVERSION <NULL>.<NULL>
alter conversion test2 rename to test3;
NOTICE:  snitch: command_start ALTER CONVERSION <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER CONVERSION <NULL>.<NULL>
drop conversion test3;
NOTICE:  snitch: command_start DROP CONVERSION <NULL>.<NULL>
drop conversion test;
NOTICE:  snitch: command_start DROP CONVERSION <NULL>.<NULL>
create operator class test_op_class
   for type anyenum using hash as
   operator 1  =,
   function 1  hashenum(anyenum);
NOTICE:  snitch: command_start CREATE OPERATOR CLASS <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE OPERATOR CLASS <NULL>.<NULL>
create text search configuration test (parser = "default");
NOTICE:  snitch: command_start CREATE TEXT SEARCH CONFIGURATION <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE TEXT SEARCH CONFIGURATION <NULL>.<NULL>
create text search dictionary test_stem (
   template = snowball,
   language = 'english', stopwords = 'english'
);
NOTICE:  snitch: command_start CREATE TEXT SEARCH DICTIONARY <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE TEXT SEARCH DICTIONARY <NULL>.<NULL>
alter text search dictionary test_stem (StopWords = dutch );
NOTICE:  snitch: command_start ALTER TEXT SEARCH DICTIONARY <NULL>.<NULL>
create text search parser test_parser (
  start = prsd_start,
  gettoken = prsd_nexttoken,
  end = prsd_end,
  lextypes = prsd_lextype,
  headline = prsd_headline
);
NOTICE:  snitch: command_start CREATE TEXT SEARCH PARSER <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE TEXT SEARCH PARSER <NULL>.<NULL>
create text search template test_template (
  init = dsimple_init,
  lexize = dsimple_lexize
);
NOTICE:  snitch: command_start CREATE TEXT SEARCH TEMPLATE <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE TEXT SEARCH TEMPLATE <NULL>.<NULL>
drop text search configuration test;
NOTICE:  snitch: command_start DROP TEXT SEARCH CONFIGURATION <NULL>.<NULL>
NOTICE:  snitch: command_start DROP TEXT SEARCH CONFIGURATION <NULL>.<NULL>
drop text search dictionary test_stem;
NOTICE:  snitch: command_start DROP TEXT SEARCH DICTIONARY <NULL>.<NULL>
NOTICE:  snitch: command_start DROP TEXT SEARCH DICTIONARY <NULL>.<NULL>
drop text search parser test_parser;
NOTICE:  snitch: command_start DROP TEXT SEARCH PARSER <NULL>.<NULL>
NOTICE:  snitch: command_start DROP TEXT SEARCH PARSER <NULL>.<NULL>
drop text search template test_template;
NOTICE:  snitch: command_start DROP TEXT SEARCH TEMPLATE <NULL>.<NULL>
NOTICE:  snitch: command_start DROP TEXT SEARCH TEMPLATE <NULL>.<NULL>
create function cmd.testcast(text) returns int4  language plpgsql as $$begin return 4::int4;end;$$;
NOTICE:  snitch: command_start CREATE FUNCTION <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE FUNCTION <NULL>.<NULL>
create cast (text as int4) with function cmd.testcast(text) as assignment;
NOTICE:  snitch: command_start CREATE CAST <NULL>.<NULL>
NOTICE:  snitch: command_start CREATE CAST <NULL>.<NULL>
alter schema cmd rename to cmd1;
NOTICE:  snitch: command_start ALTER SCHEMA <NULL>.<NULL>
NOTICE:  snitch: command_start ALTER SCHEMA <NULL>.<NULL>
drop schema cmd1 cascade;
NOTICE:  snitch: command_start DROP SCHEMA <NULL>.<NULL>
NOTICE:  snitch: command_start DROP SCHEMA <NULL>.<NULL>
NOTICE:  drop cascades to 12 other objects
DETAIL:  drop cascades to table cmd1.foo
drop cascades to view cmd1.v
drop cascades to table cmd1.test
drop cascades to sequence cmd1.test_seq
drop cascades to view cmd1.view_test2
drop cascades to table cmd1.bar
drop cascades to function cmd1.plus1(integer)
drop cascades to collation francais
drop cascades to type cmd1.bug_status
drop cascades to function cmd1.trigfunc()
drop cascades to function cmd1.testcast(text)
drop cascades to cast from text to integer
drop schema cmd2 cascade;
NOTICE:  snitch: command_start DROP SCHEMA <NULL>.<NULL>
NOTICE:  snitch: command_start DROP SCHEMA <NULL>.<NULL>
-- fail because owning event trigger snitch
drop role regbob;
ERROR:  role "regbob" cannot be dropped because some objects depend on it
DETAIL:  owner of event trigger snitch
drop event trigger any_t;
drop event trigger snitch;
drop role regbob;
create table onerow(id integer);
create or replace function insert_one_row()
 returns event_trigger
 language plpgsql
as $$
begin
  insert into onerow values (1);
  raise notice 'insert_one_row';
end;
$$;
create or replace function check_one_row()
 returns event_trigger
 language plpgsql
as $$
declare
 c integer;
begin
  select into c count(*) from onerow;
  raise notice 'check_one_row: %', c;
end;
$$;
create event trigger a_insert_one_row on command_start
        when tag in ('alter table')
   execute procedure insert_one_row();
create event trigger b_check_one_row on command_start
         when tag in ('alter table')
   execute procedure check_one_row();
alter table onerow alter column id type bigint;
NOTICE:  insert_one_row
NOTICE:  check_one_row: 1
drop event trigger b_check_one_row cascade;
drop event trigger a_insert_one_row cascade;
drop table onerow;
